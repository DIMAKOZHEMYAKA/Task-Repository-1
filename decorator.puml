@startuml
class Models.Shapes.ShapeFactory {
- HashMap<Integer,Shape> shapes
+ Shape createShape(int)
}


class Models.Shapes.Hexagon {
- double sideLength
- Color ColorStroke
~ double area()
+ void draw(GraphicsContext)
+ void setSize(double)
+ double[] getBounds()
+ String toString()
}


class Models.Shapes.Square {
- double sideLength
- Color ColorStroke
~ double area()
+ void draw(GraphicsContext)
+ void setSize(double)
+ double[] getBounds()
+ String toString()
}


class Models.Shapes.Decorate {
# Shape shape
# Paint paint
# Effect effect
# List<Addon> addons
+ void setPaint(Paint)
+ void setAddons(List<Addon>)
+ void setEffect(Effect)
+ void draw(GraphicsContext)
+ Shape getShape()
}


interface Models.Addons.Addon {
~ void draw(GraphicsContext)
}

class Models.Shapes.Momento {
- Queue<Object> momentoList
+ void push(Object)
+ Object poll()
+ boolean remove(Object)
+ int getSize()
+ ArrayList<Object> getListShapes()
}


abstract class Models.Shapes.Shape {
# Color color
# double x
~ {abstract}double area()
+ {abstract}void draw(GraphicsContext)
+ void setColor(Color)
+ void setColorStroke(Color)
+ void setXY(double,double)
+ {abstract}void setSize(double)
+ Object clone()
+ double getX()
+ double getY()
+ {abstract}double[] getBounds()
}


class Models.Addons.Split {
# Decorate decorate
+ void draw(GraphicsContext)
}


enum Models.Effects.EffectEnum {
+  NONE
+  DROP_SHADOW
+  BLUR
+  INNER_SHADOW
}

class Models.Shapes.Triangle {
- double sideLength
- Color ColorStroke
~ double area()
+ void draw(GraphicsContext)
+ void setSize(double)
+ double[] getBounds()
+ String toString()
}


class Models.Shapes.Pentagon {
- Color colorStroke
- double sideLength
+ void draw(GraphicsContext)
+ void setSize(double)
+ double[] getBounds()
~ double area()
+ String toString()
}


class decoratorRep.Application {
+ void start(Stage)
+ {static} void main(String[])
}

class decoratorRep.ShapeController {
- Canvas canvas
- ObservableList<Shape> shapeTypeObserve
- ColorPicker fillColorPicker
- ColorPicker strokeColorPicker
- ComboBox<EffectEnum> effectCombo
- CheckBox pulseCheckBox
- CheckBox patternCheckBox
- CheckBox splitCheckBox
- TextField sizeField
- ShapeFactory shapeFactory
- EffectShape effectShape
- Momento momento
- ListView<Shape> listView
+ void initialize()
- void drawShape(MouseEvent)
- void clearCanvas()
- void undoLast()
}


class Models.Effects.EffectShape {
- EnumMap<EffectEnum,Effect> effectEnumMap
- void initializeEffects()
+ Effect getEffect(EffectEnum)
+ EnumMap<EffectEnum,Effect> getAllEffects()
}


class Models.Shapes.Circle {
- double radius
- Color ColorStroke
~ double area()
+ void draw(GraphicsContext)
+ void setSize(double)
+ double[] getBounds()
+ String toString()
}


class Models.Addons.PatternFill {
- Decorate decorate
- double spacing
+ void draw(GraphicsContext)
}


class Models.Addons.AnimatedPulse {
- Decorate decorate
- double currentScale
- Timeline animation
+ void startAnimation()
+ void stopAnimation()
+ void draw(GraphicsContext)
}




Models.Shapes.Shape <|-- Models.Shapes.Hexagon
Models.Shapes.Shape <|-- Models.Shapes.Square
Models.Shapes.Cloneable <|.. Models.Shapes.Shape
Models.Addons.Addon <|.. Models.Addons.Split
Models.Shapes.Shape <|-- Models.Shapes.Triangle
Models.Shapes.Shape <|-- Models.Shapes.Pentagon
decoratorRep.Application <|-- decoratorRep.Application
Models.Shapes.Shape <|-- Models.Shapes.Circle
Models.Addons.Addon <|.. Models.Addons.PatternFill
Models.Addons.Addon <|.. Models.Addons.AnimatedPulse
@enduml